{
  "name": "ordered-ast-traverse",
  "version": "0.1.1",
  "description": "simple but flexible lexically ordered AST traversal with pre and post visitors",
  "main": "ordered-ast-traverse.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/olov/ordered-ast-traverse.git"
  },
  "dependencies": {
    "ordered-esprima-props": "~1.0.0"
  },
  "keywords": [
    "ast",
    "traverse",
    "traversal",
    "walk",
    "visit",
    "visitor",
    "esprima"
  ],
  "author": {
    "name": "Olov Lassus",
    "email": "olov.lassus@gmail.com"
  },
  "license": "MIT",
  "readme": "# ordered-ast-traverse.js\nSimple but flexible lexically ordered AST traversal with pre and post visitors.\n\nSame as [ast-traverse](https://github.com/olov/ast-traverse) but instead of\nvisiting everything that looks like an AST node, nodes are visited according to\n[ordered-esprima-props](https://github.com/olov/ordered-esprima-props/blob/master/ordered-esprima-props.js).\n\nThe result is that the AST traversal happens in lexical order, i.e. an\nAST-traversal in this order will visit nodes in increasing source code\nposition. Tested with Esprima but should work for any Mozilla Parser API\ncompatible AST, see\nhttps://developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey/Parser_API\n\n## Usage and examples\nSee [ast-traverse README](https://github.com/olov/ast-traverse/blob/master/README.md)\n\n## License\n`MIT`, see [LICENSE](LICENSE) file.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/olov/ordered-ast-traverse/issues"
  },
  "_id": "ordered-ast-traverse@0.1.1",
  "_from": "ordered-ast-traverse@~0.1.1"
}
